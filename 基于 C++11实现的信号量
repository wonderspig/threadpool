//基于 C++11实现的信号量
class Semaphore
{
public:
	Semaphore(int value) :m_value(value)
	{
	}
	Semaphore(const Semaphore&) = delete;
	void P()
	{
		unique_lock<mutex> lock(m_mutex);
		while (m_value==0)
		{
			m_cv.wait(lock);
		}
		m_value--;
	}
	void V()
	{
		unique_lock<mutex> lock(m_mutex);
		 
		m_value++;
		m_cv.notify_one();
	}
private:
	mutex m_mutex;
	int m_value;
	condition_variable m_cv;
};
